require('source-map-support').install()
const tap = require('tap-lite-tester')
const {randomBytes} = require('crypto')
const {generateShares, unlockShares} = require('../dist')

tap.start()

::
  for let threshold=1; threshold<=16; threshold*=2 ::
    for let additional=0; additional<=4; additional+=2 ::
      const total = threshold + additional

      tap.test @ `round trip threshold: ${threshold} total: ${total}`, t => ::
        const secret = randomBytes(64)
        const shares = generateShares(secret, threshold, total)
        const secret_rt = unlockShares(shares)
        if 0 ::
          console.dir @ shares
        t.equal @ 0, Buffer.compare(secret, secret_rt)


const known_secret = Buffer.from @ '/Vyb7AZeqh0Hx7tPw3Jy8yHbr2Zr00RtkiW3X9UGmZTsbh2VNajR/zOEpNd/U/X7y+BpIIr7w64x+YmMooBg2g==', 'base64'
tap.test @ `known secret threshold: 2 total: 4`, t => ::
  const shares =
    @[] 'AgFA2MLGSIKPAXdcZpyyOWxxmt-3CJjtLSGcWQSUv3WFNHj9_2AJvJh7brZ8TEyHiIcf5MshdX1lHnPN2q8y0ox9'
      , 'AgKcTym4mv3gJefqGvIh5E7sTNOfupavlvWO3crSAeChz99TwmRNgEPsieAP-hngDwN46DYib-yU1bWRL8qZJKOP'
      , 'AgMhy3CS1CHFOZdxxyFQr1Bu99eH1GWR_7mAoXkZa5O9b0vAIJFxlApo1NLXYSo0cn-s7JQjkGoyZfelfOkJdk8o'
      , 'AgQ_euREJQM-bdyd4i4cRQrN-8vPxYor-0aqzk1eZtHpIooUuGzF-O7ZXEzpjbMuGhC28NckW9VtWCIp3gDU0_1w'

  t.equal @ 0, Buffer.compare @ known_secret, unlockShares @ @[] shares[0], shares[1]
  t.equal @ 0, Buffer.compare @ known_secret, unlockShares @ @[] shares[0], shares[2]
  t.equal @ 0, Buffer.compare @ known_secret, unlockShares @ @[] shares[0], shares[3]
  t.equal @ 0, Buffer.compare @ known_secret, unlockShares @ @[] shares[1], shares[2]
  t.equal @ 0, Buffer.compare @ known_secret, unlockShares @ @[] shares[1], shares[3]
  t.equal @ 0, Buffer.compare @ known_secret, unlockShares @ @[] shares[2], shares[3]

  t.equal @ 0, Buffer.compare @ known_secret, unlockShares @ @[] shares[0], shares[1], shares[2]
  t.equal @ 0, Buffer.compare @ known_secret, unlockShares @ @[] shares[0], shares[1], shares[3]
  t.equal @ 0, Buffer.compare @ known_secret, unlockShares @ @[] shares[0], shares[2], shares[3]
  t.equal @ 0, Buffer.compare @ known_secret, unlockShares @ @[] shares[1], shares[2], shares[3]

  t.equal @ 0, Buffer.compare @ known_secret, unlockShares @ @[] shares[0], shares[1], shares[2], shares[3]

tap.finish()
